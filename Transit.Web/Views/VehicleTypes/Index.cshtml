@model Transit.Web.Models.VehicleTypesViewModel

@{
    ViewBag.Title = "Vehicle Types";
}

@Html.Partial("_BreadCrumbs", Model)

<!-- Vehicle Types Row -->
<div class="row">
    <div class="col-sm-12">
        <div class="panel panel-default card-view">
            <div class="panel-wrapper collapse in">
                <div class="panel-body">
                    <div class="table-wrap">
                        <div class="table-responsive">
                            <table id="VehicleTypesTable" class="table display mb-30">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Name</th>
                                        <th>IsActive</th>
                                        <th>Created</th>
                                        <th>CreatedOn</th>
                                        <th>Modified</th>
                                        <th>ModifiedOn</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <hr />
                    <button data-toggle="modal" data-target="#newVehicleTypeModal" class="btn btn-success btn-lable-wrap left-label"> <span class="btn-label"><i class="fa fa-plus"></i> </span><span class="btn-text">Add New Vehicle Type</span></button>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- /Vehicle Types Row -->

<div id="newVehicleTypeModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" role="document">
        <form class="modal-content form-horizontal" id="newVehicleTypeModalForm">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h5 class="modal-title">Add New Vehicle Type</h5>
            </div>
            <div class="modal-body">
                <div class="form-group required">
                    <label class="col-sm-3 control-label">Name</label>
                    <div class="col-sm-9">
                        <input id="newVehicleTypeName" type="text" class="form-control" name="Name" placeholder="Name" required>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Status</label>
                    <div class="col-sm-9">
                        <div class="checkbox checkbox-success pr-10 pull-left">
                            <input data-val="true" name="IsActive" id="newVehicleTypeIsActive" type="checkbox">
                            <label for="newVehicleTypeIsActive"> IsActive</label>
                        </div>                        
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success btn-lable-wrap left-label"> <span class="btn-label"><i class="fa fa-plus"></i> </span><span class="btn-text">Save</span></button>
                <button data-dismiss="modal" type="button" class="btn btn-default btn-lable-wrap left-label"> <span class="btn-label"><i class="fa fa-times"></i> </span><span class="btn-text">Cancel</span></button>
            </div>
            <div class="alert alert-danger" id="newVehicleTypeFormErrors" style="display:none">
                <p id="newVehicleTypeFormErrorsMessages"></p>
            </div>
        </form>
    </div>
</div>

<div id="updateVehicleTypeModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" style="display: none;">
    <div class="modal-dialog" role="document">
        <form class="modal-content form-horizontal" id="updateVehicleTypeModalForm">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">×</span></button>
                <h5 class="modal-title">New Update Vehicle Type</h5>
            </div>
            <div class="modal-body">
                <input id="updateVehicleTypeID" type="hidden" class="form-control" name="ID">
                <div class="form-group required">
                    <label class="col-sm-3 control-label">Name</label>
                    <div class="col-sm-9">
                        <input id="updateVehicleTypeName" type="text" class="form-control" name="Name" placeholder="Name" required>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Status</label>
                    <div class="col-sm-9">
                        <div class="checkbox checkbox-success pr-10 pull-left">
                            <input data-val="true" name="IsActive" id="updateVehicleTypeIsActive" type="checkbox">
                            <label for="updateVehicleTypeIsActive"> IsActive</label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="submit" class="btn btn-success btn-lable-wrap left-label"> <span class="btn-label"><i class="fa fa-pencil"></i> </span><span class="btn-text">Update</span></button>
                <button data-dismiss="modal" type="button" class="btn btn-default btn-lable-wrap left-label"> <span class="btn-label"><i class="fa fa-times"></i> </span><span class="btn-text">Cancel</span></button>
            </div>
            <div class="alert alert-danger" id="updateVehicleTypeFormErrors" style="display:none">
                <p id="updateVehicleTypeFormErrorsMessages"></p>
            </div>
        </form>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel1">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title" id="exampleModalLabel1">New message</h5>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="recipient-name" class="control-label mb-10">Recipient:</label>
                        <input type="text" class="form-control" id="recipient-name1">
                    </div>
                    <div class="form-group">
                        <label for="message-text" class="control-label mb-10">Message:</label>
                        <textarea class="form-control" id="message-text1"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Send message</button>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {

        var vehicleTypesTable;

        $.ajax({
            url: 'GetAllVehicleTypesAJAX',
            method: 'get',
            dataType: 'json',
            success: function (data) {
                debugger;
                vehicleTypesTable = $('#VehicleTypesTable').on('processing.dt', function (e, settings, processing) {
                    $('#processingIndicator').css('display', processing ? 'block' : 'none');
                }).dataTable({
                    paging: true,
                    sort: true,
                    searching: true,
                    "processing": true,
                    data: data,
                    columns: [
                        { 'data': 'ID' },
                        { 'data': 'Name' },
                        {
                            'data': 'IsActive',
                            'render': function (status) {
                                return GetFormattedStatus(status);
                            }
                        },
                        {
                            'data': 'CreatedBy',
                            'render': function (CreatedBy, type, row) {
                                debugger;
                                return CreatedBy + "<br />" + GetFormattedDate(row["CreatedOn"]);
                            }
                        },
                        {
                            'data': 'CreatedOn',
                            "visible": false,
                            "searchable": false
                        },
                        {
                            'data': 'ModifiedBy',
                            'render': function (ModifiedBy, type, row) {
                                return ModifiedBy + "<br />" + GetFormattedDate(row["ModifiedOn"]);
                            }
                        },
                        {
                            'data': 'ModifiedOn',
                            "visible": false,
                            "searchable": false
                        },
                        {
                            'data': 'ID',
                            'render': function (ID) {
                                return "<button data-id=\"" + ID + "\" data-toggle=\"modal\" data-target=\"#updateVehicleTypeModal\" class=\"btn btn-warning btn-lable-wrap left-label\"> <span class=\"btn-label\"><i class=\"fa fa-pencil\"></i> </span><span class=\"btn-text\">Edit</span></button> <button class=\"btn btn-danger btn-lable-wrap left-label\"> <span class=\"btn-label\"><i class=\"fa fa-trash\"></i> </span><span class=\"btn-text\">Delete</span></button>"
                            }
                        },
                    ],
                    
                });
            }
        });

        function padding(pad, string) {
            if (typeof string === 'undefined')
                return pad;
            else {
                if ((string + "").length < pad.length) {
                    return (pad + string).slice(-pad.length);
                }
                else return string;
            }
        }

        function GetFormattedDate(date) {
            debugger;
            if (date != undefined && date.length > 0) {
                var formattedDate = new Date(parseInt(date.substr(6)));
                if (formattedDate != undefined) {
                    var fDate = formattedDate.getDate();
                    var fMonth = formattedDate.getMonth();
                    fMonth += 1;  // JavaScript months are 0-11
                    var fYear = formattedDate.getFullYear();
                    var fHour = (formattedDate.getHours());
                    var fMinute = formattedDate.getMinutes();
                    var fSecond = formattedDate.getSeconds();

                    var ampm = "AM";

                    if (fHour >= 12) {
                        ampm = "PM";
                        fHour = fHour % 12;
                    }

                    return fDate + "/" + fMonth + "/" + fYear + " " + padding("00", fHour) + ":" + padding("00", fMinute) + ":" + padding("00", fSecond) + " " + ampm;
                }
            }
        }

        function GetFormattedStatus(status) {
            if (status == true) {
                var span = $("<span>");
                span.addClass("label label-success");
                span.html("Yes");
                return "<span class=\"label label-success\">Yes</span>";
            }
            else {
                var span = $("<span>");
                span.addClass("label label-danger");
                span.html("No");
                return "<span class=\"label label-danger\">No</span>";
            }
        }

        var NewRow = false;

        var RowID = 0;

        //var vehicleTypesTable = $("#VehicleTypesTable").DataTable({
        //    "createdRow": function (row, data, index) {
        //        if (NewRow) {
        //            if (data[2] == true) {
        //                var span = $("<span>");
        //                span.addClass("label label-success");
        //                span.html("Yes");
        //                $('td', row).eq(2).html(span);
        //            }
        //            else
        //            {
        //                var span = $("<span>");
        //                span.addClass("label label-danger");
        //                span.html("No");
        //                $('td', row).eq(2).html(span);
        //            }

        //            if (data[6] != undefined && data[6].length > 0)
        //            {
        //                var formattedDate = new Date(parseInt(data[6].substr(6)));
        //                if(formattedDate != undefined)
        //                {
        //                    var fDate = formattedDate.getDate();
        //                    var fMonth = formattedDate.getMonth();
        //                    fMonth += 1;  // JavaScript months are 0-11
        //                    var fYear = formattedDate.getFullYear();
        //                    var fHour = (formattedDate.getHours());
        //                    var fMinute = formattedDate.getMinutes();
        //                    var fSecond = formattedDate.getSeconds();

        //                    var ampm = "AM";

        //                    if (fHour >= 12)
        //                    {
        //                        ampm = "PM";
        //                        fHour = fHour % 12;
        //                    }

        //                    $('td', row).eq(3).append(fDate + "/" + fMonth + "/" + fYear + " " + padding("00", fHour) + ":" + padding("00", fMinute) + ":" + padding("00", fSecond) + " " + ampm);
        //                }
        //            }

        //            if (data[7] != undefined && data[7].length > 0) {
        //                var formattedDate = new Date(parseInt(data[7].substr(6)));
        //                if (formattedDate != undefined) {
        //                    var fDate = formattedDate.getDate();
        //                    var fMonth = formattedDate.getMonth();
        //                    fMonth += 1;  // JavaScript months are 0-11
        //                    var fYear = formattedDate.getFullYear();
        //                    var fHour = (formattedDate.getHours());
        //                    var fMinute = formattedDate.getMinutes();
        //                    var fSecond = formattedDate.getSeconds();

        //                    var ampm = "AM";

        //                    if (fHour >= 12) {
        //                        ampm = "PM";
        //                        fHour = fHour % 12;
        //                    }

        //                    $('td', row).eq(4).append(fDate + "/" + fMonth + "/" + fYear + " " + padding("00", fHour) + ":" + padding("00", fMinute) + ":" + padding("00", fSecond) + " " + ampm);
        //                }
        //            }

        //            NewRow = false;
        //        }
        //    }
        //});

        $("#newVehicleTypeModalForm").on('submit', (function (event) {

            if ($("#newVehicleTypeModalForm").valid()) {
                event.preventDefault();
                var jqxhr = $.ajax(
                            {
                                type: "post",
                                data: {
                                    Name: $("#newVehicleTypeName").val(),
                                    IsActive: $("#newVehicleTypeIsActive").is(':checked')
                                },
                                url: "AddNewVehicleTypeAJAX"
                            })
                                .done(function (data) {
                                    debugger;
                                    console.log(data);

                                    if (data.Successful)
                                    {
                                        NewRow = true;
                                        vehicleTypesTable.row.add([
                                            data.VehicleType["ID"],
                                            "<strong>" + data.VehicleType["Name"] + "</strong>",
                                            data.VehicleType["IsActive"],
                                            data.VehicleType["CreatedBy"] + "<br />" + GetFormattedDate(data.VehicleType["CreatedOn"]),
                                            data.VehicleType["ModifiedBy"] + "<br />" + GetFormattedDate(data.VehicleType["ModifiedOn"]),
                                            "<button data-id=\"" + data.VehicleType["ID"] + "\" data-toggle=\"modal\" data-target=\"#updateVehicleTypeModal\" class=\"btn btn-warning btn-lable-wrap left-label\"> <span class=\"btn-label\"><i class=\"fa fa-pencil\"></i> </span><span class=\"btn-text\">Edit</span></button> <button class=\"btn btn-danger btn-lable-wrap left-label\"> <span class=\"btn-label\"><i class=\"fa fa-trash\"></i> </span><span class=\"btn-text\">Delete</span></button>"
                                        ]).draw(false);

                                        //refresh the fields in here if you like
                                        $("#newVehicleTypeFormErrorsMessages").html("");
                                        $("#newVehicleTypeFormErrors").hide();
                                        $('#newVehicleTypeModal').modal('toggle');
                                    }
                                    else
                                    {
                                        $("#newVehicleTypeFormErrors").show();
                                        $("#newVehicleTypeFormErrorsMessages").html(data.Exception);
                                    }
                                })
                                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                                    $("#newVehicleTypeFormErrors").show();
                                    $("#newVehicleTypeFormErrorsMessages").html(errorThrown);
                                })
                                .always(function () {
                                });
            }
            else {
                $("#newVehicleTypeFormErrors").show();
                $("#newVehicleTypeFormErrorsMessages").html("Please fill the required form fields.");
            }
        }));

        $('#updateVehicleTypeModal').on('show.bs.modal', function (event) {
            debugger;
            var button = $(event.relatedTarget);
            var vehicleTypeId = button.data('id');
            var vehicleTypeName = button.closest("tr").find(".name").text();
            var vehicleTypeIsActive = button.closest("tr").find(".isActive").children().first().text();
            RowID = button.closest("tr").attr("id");
            var modal = $(this);
            modal.find('#updateVehicleTypeID').val(vehicleTypeId);
            modal.find('#updateVehicleTypeName').val(vehicleTypeName);

            if(vehicleTypeIsActive == "Yes")
            {
                $("#updateVehicleTypeIsActive").prop('checked', true);
            }
            else
            {
                $("#updateVehicleTypeIsActive").prop('checked', false);
            }

        });

        $("#updateVehicleTypeModalForm").on('submit', (function (event) {
            if ($("#updateVehicleTypeModalForm").valid()) {
                event.preventDefault();
                var jqxhr = $.ajax(
                            {
                                type: "post",
                                data: {
                                    ID : $("#updateVehicleTypeID").val(),
                                    Name: $("#updateVehicleTypeName").val(),
                                    IsActive: $("#updateVehicleTypeIsActive").is(':checked')
                                },
                                url: "UpdateVehicleTypeAJAX"
                            })
                                .done(function (data) {
                                    debugger;
                                    console.log(data);

                                    if (data.Successful) {
                                        vehicleTypesTable.row($("#updateVehicleTypeID").val()-1).data([
                                            data.VehicleType["ID"],
                                            "<strong>" + data.VehicleType["Name"] + "</strong>",
                                            GetFormattedStatus(data.VehicleType["IsActive"]),
                                            data.VehicleType["CreatedBy"] + "<br />" + GetFormattedDate(data.VehicleType["CreatedOn"]),
                                            data.VehicleType["ModifiedBy"] + "<br />" + GetFormattedDate(data.VehicleType["ModifiedOn"]),
                                            "<button data-id=\"" + data.VehicleType["ID"] + "\" data-toggle=\"modal\" data-target=\"#updateVehicleTypeModal\" class=\"btn btn-warning btn-lable-wrap left-label\"> <span class=\"btn-label\"><i class=\"fa fa-pencil\"></i> </span><span class=\"btn-text\">Edit</span></button> <button class=\"btn btn-danger btn-lable-wrap left-label\"> <span class=\"btn-label\"><i class=\"fa fa-trash\"></i> </span><span class=\"btn-text\">Delete</span></button>"
                                        ]).invalidate().draw();

                                        //refresh the fields in here if you like
                                        $("#updateVehicleTypeFormErrorsMessages").html("");
                                        $("#updateVehicleTypeFormErrors").hide();
                                        $('#updateVehicleTypeModal').modal('toggle');
                                    }
                                    else {
                                        $("#updateVehicleTypeFormErrors").show();
                                        $("#updateVehicleTypeFormErrorsMessages").html(data.Exception);
                                    }
                                })
                                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                                    debugger;
                                    $("#updateVehicleTypeFormErrors").show();
                                    $("#updateVehicleTypeFormErrorsMessages").html(errorThrown);
                                })
                                .always(function () {
                                });
            }
            else {
                $("#updateVehicleTypeFormErrors").show();
                $("#updateVehicleTypeFormErrorsMessages").html("Please fill the required form fields.");
            }
        }));

        $("#NewRecord2").click(function () {
            debugger;
            //donothing just test
            //dont post now
            if ($("#myeditorform").valid()) {

                debugger;
                //$('#myeditor-modal').modal('toggle');//its working
                var jqxhr = $.ajax(
                        {
                            type: "post",
                            url: "AddNewVehicleTypeAJAX",
                            data: { Name: 'KingPin' }
                        })
                            .done(function (data) {
                                console.log(data);
                            })
                            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                                showMessage(errorThrown, true);
                            })
                            .always(function () {
                            });
            }
        });

        //$('#responsive-modal').modal('toggle');//its working
        $("#AddVehicleTypeModelSubmitButton").click(function () {
            debugger;

            var VehicleTypeName = $("#NewVehicleTypeName").val();

            if (VehicleTypeName == undefined || VehicleTypeName.length <= 0) {
                AddErrors($("#NewVehicleTypeName"));
            }
            else {
                console.log("I am being hit");
                console.log(VehicleTypeName);

                var jqxhr = $.ajax(
                    {
                        type: "post",
                        url: "AddNewVehicleTypeAJAX",
                        data: { Name: VehicleTypeName }
                    })
                        .done(function (data) {
                            console.log(data);
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            showMessage(errorThrown, true);
                        })
                        .always(function () {
                        });
            }
        });

        function AddErrors(control) {
            var span = $("<span>");
            span.addClass("help-block");
            span.attr('id', 'kingpin');
            span.html("This field is required.");
            control.after(span);
            control.parent().closest('div').addClass("has-error has-danger");

            RemoveErrors(control);
        }

        function RemoveErrors(control) {
            var shit = control.childs().closest();
        }

        $("#AddNewVehicleType").click(function () {
            var jqxhr = $.ajax({
                type: "get",
                url: "AddNewVehicleType"
            })
                .done(function (data) {
                    $("#AddVehicleTypeRow").slideUp(function () {
                        $("#VehicleTypeForm").html(data);
                        $("#VehicleTypeForm").slideDown();
                    });
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    showMessage(errorThrown, true);
                })
                .always(function () {
                });
        });

        $("[editId]").each(function () {
            $(this).click(function () {

                var editId = $(this).attr("editId");
                console.log(editId);

                var jqxhr = $.ajax({
                    type: "get",
                    url: "EditVehicleType?VehicleTypeID=" + editId
                })
                .done(function (data) {
                    $("#AddVehicleTypeRow").slideUp(function () {
                        $("#VehicleTypeForm").slideUp().slideDown(function () {
                            $("#VehicleTypeForm").html(data);
                        });
                    });
                })
                .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    showMessage(errorThrown, true);
                })
                .always(function () {
                });

            });
        });
    });
</script>